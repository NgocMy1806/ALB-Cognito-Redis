[
{
	"uri": "/vi/",
	"title": "ALB-Cognito-Redis",
	"tags": [],
	"description": "",
	"content": "Triển khai 1 application đơn giản sử dụng Amazon ElastiCache Redis để lưu session, sử dụng kết hợp ALB và Amazon Cognito để xác thực user Tổng quan Trong bài lab này, bạn sẽ thực hành tạo 1 laravel application đơn giản, có sử dụng Amazon ElastiCache Redis để lưu session, và sử dụng kết hợp Application Load Balancer (ALB) và Amazon Cognito để thực hiện chức năng xác thực (đăng kí, đăng nhập, đăng xuất).\nNgoài ra, trong quá trình làm lab, bạn cũng sẽ được giới thiệu cách để chuyển nameserver từ domain provider về Route 53, cách sử dụng AWS Certificate Manager để request SSL certificate cho domain, cách sử dụng Elastic Beanstalk để triển khai ứng dụng một cách nhanh chóng.\nRất mong bài lab này sẽ giúp ích cho bạn trong \u0026ldquo;hành trình lên mây\u0026rdquo;!\nNội dung Giới thiệu Các bước chuẩn bị Cấu hình Cognito Triển khai ứng dụng Cấu hình ALB Cấu hình DNS Cấu hình Redis cluster Hiện trạng trước khi dùng Redis Kiểm tra kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Trong bài lab này, bạn sẽ thực hành tạo 1 laravel application đơn giản, có sử dụng Amazon ElastiCache Redis để lưu session, và sử dụng kết hợp Application Load Balancer (ALB) và Amazon Cognito để thực hiện chức năng xác thực (đăng kí, đăng nhập, đăng xuất).\nCụ thể, application này nằm trong 2 EC2 instance dựng phía sau ALB. Khi user truy cập vào page public (ai cũng có thể xem được), thì ALB sẽ điều hướng tới thẳng EC2. Nếu user truy cập vào page private (chỉ user đã đăng nhập mới có thể xem được), ALB sẽ điều hướng tới Cognito. Sau khi user tiến hành đăng nhập trên Cognito xong, ALB sẽ điều hướng user tới resource được yêu cầu trên EC2.\nVới cấu trúc 2 EC2 như vậy, để đảm bảo tính liên tục, nhất quán của session trên tất cả instance, application này sẽ sử dụng Amazon ElastiCache Redis thay vì lưu session ngay trên file driver của mỗi server.\nNgoài ra, bài lab này cũng sẽ hướng dẫn bạn cách triển khai hệ thống một cách nhanh chóng, linh hoạt, đảm bảo high availability thông qua dịch vụ Elastic Beanstalk.\nApplication Load Balancer (ALB) ALB là một dịch vụ của Amazon Web Services (AWS) cung cấp các giải pháp phân phối tải và điều phối lưu lượng truy cập cho các ứng dụng chạy trên nhiều máy chủ khác nhau.\nAmazon Cognito Amazon Cognito là một dịch vụ đăng nhập và quản lý xác thực cho các ứng dụng web và di động. Nó cho phép các nhà phát triển xác thực và ủy quyền người dùng thông qua các social Identity Providers (IdP) như Facebook, Google và Amazon, hoặc thông qua các tài khoản người dùng tùy chỉnh. Cognito cung cấp tính năng quản lý người dùng, phân quyền và theo dõi hoạt động người dùng, giúp giảm thiểu công sức phát triển và cải thiện bảo mật cho ứng dụng.\nAmazon ElastiCache Redis Amazon ElastiCache là dịch vụ tương thích với Redis và Memcache được quản lý toàn phần, mang lại hiệu năng tối ưu hóa chi phí, theo thời gian thực cho các ứng dụng hiện đại. ElastiCache mở rộng đến hàng trăm triệu thao tác mỗi giây với thời gian phản hồi tính bằng micrô giây, đồng thời đem lại độ bảo mật và độ tin cậy cấp doanh nghiệp. Amazon ElastiCache cho Redis là lựa chọn tuyệt vời để triển khai một bộ nhớ đệm trong bộ nhớ có độ khả dụng cao, phân tán và bảo mật để giảm độ trễ truy cập, tăng năng suất và giảm tải cho cơ sở dữ liệu quan hệ hoặc NoSQL và ứng dụng của bạn.\nAWS Elastic Beanstalk Elastic Beanstalk cung cấp một nền tảng đơn giản để triển khai các ứng dụng web mà không yêu cầu kiến thức chuyên sâu về hạ tầng. Bằng cách sử dụng Elastic Beanstalk, bạn có thể tập trung vào việc phát triển ứng dụng của mình mà không phải quan tâm đến việc cấu hình và quản lý các tài nguyên cơ sở hạ tầng như máy chủ, mạng và cơ sở dữ liệu.\nĐây là bài lab mở rộng từ bài lab \u0026ldquo;Triển khai 1 website đơn giản có chức năng xác thực bằng ALB và Amazon Cognito\u0026rdquo;.\nDanh sách chức năng bổ sung: Xử lí logout ở phía backend (xóa cookie của ALB); Xử lí decode header của ALB để hiển thị thông tin user lấy từ Cognito; Lưu session trên Redis Cluster. Bạn có thể mở source code để xem chi tiết cách làm.\n"
},
{
	"uri": "/vi/2-prerequiste/2.1-domain/",
	"title": "Tạo domain",
	"tags": [],
	"description": "",
	"content": "Route 53 là dịch vụ DNS của AWS. Nó cung cấp hai dịch vụ chính là DNS và đăng ký tên miền. Để thực hiện bài lab này, bạn cần chuẩn bị một tên miền đã có SSL certificate. Bạn có thể đăng ký tên miền trên Route 53 hoặc đăng ký từ nhà cung cấp khác như GoDaddy, Freenom, vv. rồi chuyển dịch vụ DNS về Route 53.\nVì Route 53 không phải là nội dung chính của bài lab này, tôi sẽ chỉ giới thiệu nhanh các bước cơ bản để chuyển DNS service từ nhà cung cấp tên miền khác về Route 53, chứ không mô tả, giải thích chi tiết.\nBước 1: Đăng ký tên miền trên nhà cung cấp tên miền như GoDaddy, Freenom, \u0026hellip; Bước 2: Tạo public hosted zone trên Route 53. Đặt tên hosted zone trùng với tên miền. Bước 3: Sau khi tạo xong hosted zone, bạn sẽ có 4 NS record. Sao chép 4 NS record này, sau đó truy cập màn hình quản lý Nameserver trong nhà cung cấp tên miền và thay đổi các NS record mặc định thành 4 NS record của hosted zone trên Route 53. Bước 4: Việc thay đổi nameserver có thể mất khoảng vài phút đến 24 giờ. Bạn có thể kiểm tra xem NS record đã được cập nhật chưa bằng cách mở command prompt, sau đó nhập lệnh nslookup -q=ns {{domain}}. Bạn có thể tham khảo cách làm từ video sau: https://www.youtube.com/watch?v=L8YTHHweR3M\u0026amp;t=231s\nSau khi đã cập nhật NS records thành công, bạn hãy chuyển sang bước tiếp theo để tiến hành đăng kí SSL certificate cho domain.\n"
},
{
	"uri": "/vi/8-rediscluster/8.1-createcluster/",
	"title": "Tạo Redis clusters",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị của dịch vụ Amazon ElastiCache. Mở menu Redis clusters. Click chọn Create Redis Cluster. Tại màn hình tạo Redis cluster Tại mục cluster creation method, chọn Configure and create a new cluster. Tại mục Cluster mode, chọn Disabled. Tại mục Name, nhập demo-cognito. Tại mục Location, chọn AWS Cloud. Bỏ tick mục Multi-AZ (vì đây chỉ là bài lab đơn giản, không cần đến tính năng này). Bỏ tick mục Auto-failover (vì đây chỉ là bài lab đơn giản, không cần đến tính năng này). Tại mục Node type, chọn t2.micro. Tại mục Number of replicas, nhập 0. Tại mục Subnet groups, chọn Create a new subnet group. Tại mục Name, nhập redis-cluster-subnet. Tại mục VPC ID, chọn Demo-vpc. Tại mục Manage subnets, tick chọn 2 private subnet trong demo VPC, rồi click Choose. Click button Next ở cuối trang. Đến màn hình của step 2: Advanced settings, tiếp tục scroll xuống cuối trang rồi click Next. Đến màn hình của step 3: Review and create, kiểm tra lại thông tin, nếu không có vấn đề gì thì scroll xuống cuối trang rồi click Create. Tại màn hình detail của Redis cluster Sau khi tạo Redis cluster thành công, bạn hãy vào màn hình detail và copy thông tin Primary endpoint. "
},
{
	"uri": "/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ chuẩn bị 1 số dịch vụ để có thể triển khai application.\nĐể sau khi user đăng nhập thành công, user được redirect về đúng page đã yêu cầu, chúng ta cần setting 1 callback URL HTTPS trên Cognito, vì vậy, ngoài các resource cơ bản trong VPC, bạn sẽ cần chuẩn bị thêm 1 public domain name và request SSL certificate cho domain đó.\nNội dung Tạo domain Đăng kí SSL certificate Tạo VPC Tạo Security group Tạo instance profile "
},
{
	"uri": "/vi/2-prerequiste/2.2-ssl/",
	"title": "Đăng kí SSL certificate",
	"tags": [],
	"description": "",
	"content": " Truy cập giao diện quản trị dịch vụ ACM Click Request a certificate. Tại màn hình Request certificate Click Next. Tại màn hình Request public certificate Tại mục Fully qualified domain name, nhập domain của bạn. Tại mục Add another name to this certificate, nhập *.domain để certificate này sẽ bảo vệ cả cho subdomain của bạn. Cuộn xuống cuối trang, click Request. Click vào View certificate vừa tạo Click Create records in Route 53. Sau khi verify, AWS sẽ tự động tạo CNAME record cho SSL vào trong hosted zone. Kiểm tra thấy status chuyển sang trạng thái Issued nghĩa là bạn đã request certificate thành công. "
},
{
	"uri": "/vi/3-cognito/",
	"title": "Cấu hình Cognito",
	"tags": [],
	"description": "",
	"content": "Ở bước này, chúng ta sẽ tiến hành cấu hình Amazon Cognito.\nTruy cập vào giao diện quản trị của dịch vụ Amazon Cognito. Click chọn User pools. Click chọn Create user pools. Tại màn hình Configure sign-in experience Tại mục Cognito user pool sign-in options, chọn Email. Click Next. Tại màn hình Configure security requirements Tại mục Password policy mode, chọn Custom. Bỏ tick tất cả các mục Password requirements. Bạn có thể để nguyên mode Cognito defaults cũng được, tuy nhiên, để khỏi mất thời gian tạo mật khẩu phức tạp, bài lab này sẽ làm theo hướng dùng Custom policy\nTại mục MFA enforcement, chọn No MFA. Click Next. Tại màn hình Configure sign-in experience Không thực hiện thay đổi nào hết Click Next. Tại màn hình Configure message delivery Tại mục Email provider, chọn Send email with Cognito. Click Next. Tại màn hình Integrate your app Tại mục User pool name, điền demo-cognito.\nTại mục Hosted authentication pages, tick vào Use the Cognito Hosted UI. Tại mục Domain type, chọn Use a Cognito domain.\nTại mục Cognito domain, nhập domain prefix bạn muốn.\nTại mục App type, chọn Public client.\nTại mục App client name, nhập demo-cognito. Tại mục Client secret, chọn Generate a client secret.\nTại mục Allowed callback URLs, nhập domain/oauth2/idpresponse. Thay domain bạn dự kiến dùng vào chữ domain trong URL phía trên\nMở rộng phần Advanced app client settings\nKéo xuống đến mục Allowed sign-out URLs, nhập domain/index Thay domain bạn dự kiến dùng vào chữ domain trong URL phía trên\nTại mục OpenID Connect scopes, chỉ chọn OpenID. Lí do là vì nếu bạn chọn cả Phone và Email thì bạn sẽ không thể lấy các thông tin khác của user, ví dụ như username.\nScroll xuống cuối trang, click Next. Tại màn hình Review and create\nKiểm tra lại thông tin rồi ấn Create user pool. Hoàn thành tạo User pool\nBạn hãy lưu lại các thông tin sau để lát nữa chúng ta sẽ tiến hành config file .env cho application.\nCOGNITO_CLIENT_ID\rCOGNITO_CLIENT_SECRET\rCOGNITO_DOMAIN\rCOGNITO_LOGOUT_REDIRECT_URI "
},
{
	"uri": "/vi/2-prerequiste/2.3-vpc/",
	"title": "Tạo VPC ",
	"tags": [],
	"description": "",
	"content": "Tạo VPC, subnets, route tables, internet gateway Truy cập giao diện quản trị dịch vụ VPC Click Your VPCs. Click Create VPC. Tại trang Create VPC. Tại mục Name tag điền Demo VPC. Tại mục IPv4 CIDR điền : 10.10.0.0/16. Tại mục Number of Availability Zones (AZs) chọn : 2. Tại mục Number of public subnets chọn : 2. Tại mục Number of private subnets chọn : 0. Tại mục VPC endpoints chọn : None. Click Create VPC ở cuối trang. Xem thông tin chi tiết VPC vừa tạo Thực hiện cấp phát IP public cho public subnet 1\nMở menu Subnet.\nChọn PublicSubnet1.\nChọn Edit subnet settings. Tick vào ô Enable auto-assign public IPv4 address Cick button Save\nKiểm tra đã cấp phát thành công Thực hiện cấp phát cho Public subnet còn lại (làm tương tự).\n"
},
{
	"uri": "/vi/2-prerequiste/2.4-sg/",
	"title": "Tạo security group",
	"tags": [],
	"description": "",
	"content": "Tạo các security groups Trong bước này chúng ta sẽ tiến hành tạo các security groups cho ALB, instance và ElastiCache Redis cluster.\nTạo security group cho ALB Truy cập giao diện quản trị dịch vụ VPC Click Security Group. Click Create security group. Tại màn hình Create security group Tại mục Security group name, điền SG ALB. Tại mục Description, điền SG ALB. Tại mục VPC, click dấu X để chọn lại Demo-vpc bạn đã tạo cho bài lab này. Tạo 2 inbound rule cho phép nhận traffic tới port 80 và 443 từ internet như sau Giữ nguyên Outbound rule.\nScroll xuống cuối trang, click Create security group.\nTạo security group cho Linux instance nằm trong public subnet Truy cập giao diện quản trị dịch vụ VPC Click Security Group. Click Create security group. Tại màn hình Create security group Tại mục Security group name, điền SG Public Linux Instance. Tại mục Description, điền SG Public Linux Instance. Tại mục VPC, click dấu X để chọn lại Demo-vpc bạn đã tạo cho bài lab này. EC2 instance không nhận traffic trực tiếp từ user, mà nhận thông qua ALB, vì vậy, chúng ta sẽ cấu hình inbound rule chỉ cho phép nhận traffic thông qua giao thức http, port 80 từ source là Security group của ALB.\nTiếp theo, để có thể SSH vào instance, chúng ta cần tạo thêm inbound rule cho port 22 từ My IP. Giữ nguyên Outbound rule.\nScroll xuống cuối trang, click Create security group.\nTạo security group cho ElastiCache Redis cluster Truy cập giao diện quản trị dịch vụ VPC Click Security Group. Click Create security group. Tại màn hình Create security group Tại mục Security group name, điền SG Redis. Tại mục Description, điền SG Redis. Tại mục VPC, click dấu X để chọn lại Demo-vpc bạn đã tạo cho bài lab này. Để có thể giao tiếp với EC2, chúng ta cần mở inbound rule cho port 6379 từ source là Security group của EC2 như sau. Giữ nguyên Outbound rule. Scroll xuống cuối trang, click Create security group. Bổ sung inbound rule cho security group của Linux instance Để EC2 có thể giao tiếp với Redis cluster, chúng ta cần thực hiện các bước sau:\nTừ màn hình Security groups, chọn SG Pulic Linux Instance.\nChọn tab Inbound rules, rồi click Edit inbound rules. Tại màn hình Edit inbound rules, mở thêm inbound rule cho port 6379 từ source là Security group của Redis cluter. Như vậy chúng ta đã tạo xong các security group cần thiết cho EC2 instance, ALB và ElastiCache Redis cluster.\n"
},
{
	"uri": "/vi/4-deploy/",
	"title": "Triển khai ứng dụng",
	"tags": [],
	"description": "",
	"content": "Chuẩn bị ứng dụng Bạn hãy tải file zip sau về, giải nén ra, rồi bổ sung các thông tin sau vào file .env.\nLink download\nCOGNITO_CLIENT_ID=your client ID\rCOGNITO_CLIENT_SECRET=your client secrect COGNITO_LOGOUT_URL=cognitodomain/logout\rCOGNITO_LOGOUT_REDIRECT_URI=sign-out URLs Zip file lại. Triển khai ứng dụng Truy cập vào giao diện quản trị của dịch vụ Amazon Elastic Beanstalk. Click Create application. Tại màn hình Configure environment Tại mục Environment tier, chọn Web server environment.\nTại mục Application name, nhập demo.\nTại mục Domain, nhập domain bạn muốn rồi ấn Check availability để xem có thể dùng domain đó không. Tại mục Platform type, chọn Managed platform.\nTại mục Application code, chọn Upload your code.\nTại mục Version label, nhập v1.\nClick Choose file rồi upload file đã nén ban nãy. Tại mục Configuration presets, chọn High availability.\nClick Next. Tại màn hình Configure service access Tại mục Service role, chọn aws-elasticbeanstalk-service-role. Tại mục EC2 key pair, chọn key pair bạn muốn. Tại mục EC2 instance profile, chọn Redis_role. Click Next Tại màn hình Set up networking, database, and tags Tại mục VPC, chọn Demo-vpc. Tại mục Public IP address, tick vào checkbox Activated. Tại mục Instance subnets, chọn 2 public subnet đã tạo. Scroll xuống cuối trang, click Next Tại màn hình Configure instance traffic and scaling Tại mục Root volume type, chọn General Purpose(SSD).\nTại mục Size, nhập 10. Tại mục EC2 security groups, chọn SG Public Linux Instance.\nTại mục Auto scaling group, nhập min instances là 2, max là 3. Scroll xuống dưới, đến mục Instance types, chọn t2.micro. Tại mục Load balancer subnets, chọn 2 public subnet đã tạo. Tại mục Load Balancer Type, chọn Application load balancer.\nChọn Dedicated để tạo mới ALB.\nTại mục Listener, click Add listener để mở popup Add listener. Tại mục Listener port, nhập 443.\nTại mục Listener protocol, nhập HTTPS.\nTại mục SSL certificate, chọn certificate đã tạo.\nTại mục SSL policy, chọn ELBSecurityPolicy-TLS13-1-2-2021-06.\nClick Save Scroll xuống cuối trang, click Next.\n6/ Tại màn hình Configure updates, monitoring, and logging\nScroll xuống đến mục Container options. Tại mục Proxy server, chọn Apache. Tại mục Document root, nhập /cognito-redis/public. Scroll xuống cuối trang, click Next. 7/ Tại màn hình Review\nScroll xuống cuối trang, click Submit. "
},
{
	"uri": "/vi/5-configalb/",
	"title": "Cấu hình ALB",
	"tags": [],
	"description": "",
	"content": "Config rule cho port 80 Truy cập vào giao diện quản trị của dịch vụ EC2. Click chọn Load balancer.\nClick chọn ALB vừa được tạo bởi EB.\nMở tab Listener.\nTick vào listener HTTP:80, rồi click Manage rules. Tại màn hình manage rule cho listener HTTP:80, chúng ta sẽ tiến hành setting redirect tất cả traffic từ port 80 vào 443 để đảm bảo security.\nClick icon pen để tiến hành edit rule.\nClick icon trash để xóa action hiện tại, không cho phép traffic vào port 80 của ALB được forward thẳng vào target group. Click Add action để tạo action mới, rồi click Redirect to\u0026hellip;. Tại dropdown protocol, chọn HTTPS.\nTại field port, nhập 443.\nClick icon dấu tick.\nClick button Update. Config rule cho port 443 Tiếp theo, chúng ta sẽ tiến hành config rule cho port 443 của ALB, để khi user truy cập vào trang dashboard thì sẽ yêu cầu user thực hiện đăng nhập bằng Amazon Cognito, nếu user truy cập vào trang index thì sẽ forward thẳng tới target group.\nTrước hết, bạn hãy truy cập vào màn hình details của ALB vừa được tạo. Mở tab Listener. Tick vào listener HTTP:443, rồi click Manage rules. Click icon plus rồi click Insert rule. Tại ô condition, chọn Path, nhập /dashboard, rồi click icon dấu tick. Click Add Action, rồi chọn Authenticate. Tại mục Cognito user pool, chọn ID của user pool đã tạo. Tại mục App client, chọn app tương ứng của user pool. Click icon dấu tick. Tiếp tục click Add action, rồi click Forward to\u0026hellip;. Tại mục target group, chọn target group vừa được EB tạo. Click icon dấu tick. Click button Save. "
},
{
	"uri": "/vi/2-prerequiste/2.5-ec2profile/",
	"title": "Tạo instance profile",
	"tags": [],
	"description": "",
	"content": " Truy cập giao diện quản trị dịch vụ IAM để tạo instance role Click Roles. Click Create role. Tại màn hình Create role Chọn Trusted entity type là AWS service Chọn Use case là EC2. Chọn policy AmazonElastiCacheFullAccess. Chọn policy AWSElasticBeanstalkWebTier. Click Next.\nTại mục Role name, nhập Redis_role.\nScroll xuống cuối màn hình, click Create role.\n"
},
{
	"uri": "/vi/6-dns/",
	"title": "Cấu hình DNS record",
	"tags": [],
	"description": "",
	"content": "Ở bước này, chúng ta sẽ tiến hành cấu hình route 53 để khi truy cập vào domain democognito.mymy.asia thì DNS server sẽ trỏ tới domain của EB.\nTruy cập vào giao diện quản trị của dịch vụ Route53.\nClick chọn Hosted zones.\nClick vào tên Hostes zone đã tạo Click vào Create record Tại mục Record name, nhập democognito. Nếu bạn muốn trỏ thẳng domain chính đến EB enviroment thì có thể bỏ trống mục này\nBật toggle Alias.\nChọn route traffic to Alias to EB enviroment ở region us-east-1, và chọn EB enviroment đã tạo.\nClick Create records Sau khi tạo record thành công, bạn hãy thử truy cập bằng cách dán record name của record vừa tạo vào trình duyệt. Lúc này bạn sẽ thấy trình duyệt hiển thị màn hình index của application. "
},
{
	"uri": "/vi/7-beforeapplyredis/",
	"title": "Hiện trạng trước khi dùng Redis",
	"tags": [],
	"description": "",
	"content": " Gõ địa chỉ https://subdomain/demo-cognito/ vào trình duyệt\n(Thay subdomain tương ứng của bạn vào chỗ “subdomain” trong URL)\nClick vào Go to my page Lúc này, bạn sẽ được điều hướng đến màn hình Sign in của Cognito. Nếu bạn chưa có account, hãy click vào text link Sign up, tiến hành đăng kí, rồi thực hiện login. Sau khi đăng nhập xong, bạn sẽ được điều hướng về đúng màn hình dashboard. Hãy chú ý đến thông tin EC2 ID và số lần visit page.\nTiến hành F5 liên tục, bạn sẽ thấy nếu bạn đang ở EC2-1, lần F5 tiếp theo, nếu bạn vẫn được điều hướng vào EC2-1, thì số lần visit page sẽ tăng tịnh tiến thêm 1 đơn vị. Tuy nhiên, nếu lần F5 tiếp theo, bạn được điều hướng sang EC2-2, thì số lần visit page sẽ bị đếm lại từ 1. Lí do là bởi vì mặc định, application của chúng ta sẽ sử dụng session driver và cache driver là file, nghĩa là sẽ lưu trực tiếp trên server. Do đó, session trên 2 EC2 hoàn toàn không liên quan đến nhau, nên khi chúng ta được điều hướng sang EC2-2, hệ thống sẽ start 1 session mới, chứ không update vào session hiện có. Để xử lí vấn đề này, chúng ta sẽ sử dụng Amazon ElastiCache Redis của AWS để lưu chung session của các server vào chung 1 redis cluster.\n"
},
{
	"uri": "/vi/8-rediscluster/8.2-applyredis/",
	"title": "Apply redis cho application",
	"tags": [],
	"description": "",
	"content": "Cấu hình file .env và cài predis package Open source code đã giải nén ban nãy bằng IDE như Visual Studio Code, PHP Storm,… Sửa các env liên quan đến session, redis như sau: CACHE_DRIVER=redis\rSESSION_DRIVER=redis\rREDIS_HOST=primary endpoint of redis cluster\rREDIS_CLIENT=predis Sau đó, mở terminal, chạy command composer require predis/predis để cài đặt predis package. Predis là một thư viện PHP được sử dụng để làm việc với Redis, một hệ thống cơ sở dữ liệu key-value cache in-memory nhanh chóng và mạnh mẽ. Predis cung cấp một giao diện dễ sử dụng cho việc kết nối và tương tác với Redis từ ứng dụng PHP của bạn.\nNén folder cognito-redis lại lần nữa. Deploy new version Truy cập vào màn hình detail của EB enviroment đã tạo. Click Upload and deploy. Tại popup Upload and deploy, upload folder cognito-redis vừa nén lên. Tại mục Version label, nhập v1.1. Click Deploy. "
},
{
	"uri": "/vi/8-rediscluster/",
	"title": "Cấu hình Redis cluster",
	"tags": [],
	"description": "",
	"content": "Ở bước này, chúng ta sẽ cấu hình Redis cluster trên Amazon ElastiCache.\nNội dung: Tạo Redis clusters Apply Redis "
},
{
	"uri": "/vi/9-test/",
	"title": "Kiểm tra kết quả",
	"tags": [],
	"description": "",
	"content": " Gõ địa chỉ https://subdomain/demo-cognito/ vào trình duyệt\n(Thay subdomain tương ứng của bạn vào chỗ “subdomain” trong URL)\nClick vào Go to my page rồi thực hiện login. Tiến hành F5 liên tục. https://drive.google.com/file/d/13F1_owuio3eYqvFjUXHnmzpdzqd4m02a/view?usp=sharing\nBạn có thể thấy, dù được điều hướng luân phiên giữa 2 EC2, nhưng mỗi lần F5, visit time vẫn được tăng thêm 1, chứng tỏ chúng ta đã triển khai redis thành công.\nChúc mừng bạn vừa hoàn thành bài thực hành. Hãy nhớ thực hiện bước dọn dẹp tài nguyên để tránh sinh chi phí ngoài ý muốn nhé.\n"
},
{
	"uri": "/vi/10-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EB enviroment: Truy cập Elastic Beanstalk Management Console Mở menu Enviroment, tick vào enviroment đã tạo trong bài lab, click button Action rồi chọn Terminate enviroment. Xóa Security group Truy cập vào EC2 Chọn Security Group Chọn các security group liên quan đến bài lab Chọn Actions Chọn Delete security group Xóa Keypair Truy cập EC2 Chọn Key Pairs Chọn Actions Chọn Delete Xóa User pool Truy cập Cognito Chọn User pool Chọn Delete Xóa VPC Truy cập VPC Chọn Your VPCs Chọn các vpc liên quan bài lab Chọn Actions Chọn Delete VPC Xóa Certificates Truy cập ACM Chọn List certificates Chọn certificate liên quan đến bài lab Chọn Delete Xóa Hosted zone Truy cập Route 53 Chọn Hosted zone Chọn Hosted zone liên quan đến bài lab Chọn Delete "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]