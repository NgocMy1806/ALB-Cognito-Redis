[
{
	"uri": "/",
	"title": "ALB-Cognito-Redis",
	"tags": [],
	"description": "",
	"content": "Deploy a simple application that uses Amazon ElastiCache Redis for session storage, using a combination of ALB and Amazon Cognito for authentication Overall In this lab, you will practice creating a simple Laravel application that utilizes Amazon ElastiCache Redis to store sessions. Additionally, you will combine Application Load Balancer (ALB) and Amazon Cognito to implement authentication functionalities such as registration, login, and logout.\nFurthermore, during the lab, you will be introduced to how to transfer nameservers from a domain provider to Route 53, how to use AWS Certificate Manager to request an SSL certificate for the domain, and how to deploy applications quickly using Elastic Beanstalk.\nWe hope this lab will be helpful for you on your \u0026ldquo;cloud journey\u0026rdquo; !\nContent Introduce Preparation Configure Cognito Deploy application Configure ALB Configure DNS Configure Redis cluster Before applying Redis Test Clean up resources "
},
{
	"uri": "/8-rediscluster/8.1-createcluster/",
	"title": "Create Redis clusters",
	"tags": [],
	"description": "",
	"content": " Access to Amazon ElastiCache service management console. Open menu Redis clusters. Click Create Redis Cluster. At the Redis cluster creation screen In the cluster creation method section, select Configure and create a new cluster. In the Cluster mode section, select Disabled. In the Name field, enter demo-cognito. In the Location section, select AWS Cloud. Uncheck the item Multi-AZ (because this is just a simple lab, no need for this feature). Uncheck the item Auto-failover (because this is just a simple lab, no need for this feature). In the Node type section, select t2.micro. In the Number of replicas field, enter 0. In the Subnet groups section, select Create a new subnet group. In the Name field, enter redis-cluster-subnet. In the VPC ID section, select Demo-vpc. In the Manage subnets section, tick 2 private subnets in the VPC demo, then click Choose. Click the Next button at the bottom of the page. Go to the screen of step 2: Advanced settings, continue to scroll to the bottom of the page and then click Next. Go to the screen of step 3: Review and create, check the information again, if there are no problems, then scroll to the bottom of the page and then click Create. At the detail screen of the Redis cluster After creating the Redis cluster successfully, go to the detail screen and copy the Primary endpoint information. "
},
{
	"uri": "/1-introduce/",
	"title": "Introduce",
	"tags": [],
	"description": "",
	"content": "In this lab, you will practice creating a simple Laravel application that uses Amazon ElastiCache Redis to store sessions, and combines Application Load Balancer (ALB) and Amazon Cognito for authentication functionalities (registration, login, logout).\nThis application is hosted on 2 EC2 instances behind ALB. When a user accesses a public page (accessible to anyone), ALB will directly route the request to one of the EC2 instances. If a user accesses a private page (only accessible to logged-in users), ALB will route the request to Cognito. After the user completes the login process on Cognito, ALB will direct the user to the requested resource on EC2.\nWith such a 2 EC2 structure, to ensure session continuity and consistency across all instances, this application will use Amazon ElastiCache Redis instead of saving the session right on the file driver of each server.\nAdditionally, this lab will guide you on how to deploy the system quickly, flexibly, and with high availability using the Elastic Beanstalk service.\nApplication Load Balancer (ALB) ALB is a service provided by Amazon Web Services (AWS) that offers load balancing and traffic routing solutions for applications running on multiple servers.\nAmazon Cognito Amazon Cognito is a login and authentication management service for web and mobile applications. It enables developers to authenticate and authorize users through social Identity Providers (IdP) such as Facebook, Google, and Amazon, or through custom user accounts. Cognito provides user management, authorization, and activity tracking features, helping to reduce development effort and improve security for applications.\nAmazon ElastiCache Redis Amazon ElastiCache is a fully managed, compatible Redis and Memcached service that provides cost-optimized, real-time performance for modern applications. ElastiCache scales to handle hundreds of millions of operations per second with microsecond response times, while ensuring enterprise-grade security and reliability.\nAmazon ElastiCache for Redis is an excellent choice for deploying a highly available, distributed, and secure in-memory cache to reduce access latency, increase throughput, and offload your relational or NoSQL databases and applications.\nAWS Elastic Beanstalk Elastic Beanstalk provides a simple platform for deploying web applications without requiring deep knowledge of infrastructure. By using Elastic Beanstalk, you can focus on developing your application without worrying about configuring and managing underlying infrastructure resources such as servers, networks, and databases.\nThis lab is an extension of the lab \u0026ldquo;Deploying a simple website with authentication function using ALB and Amazon Cognito\u0026rdquo;\nAdditional features included: Backend logout handling (clearing ALB cookies); Decoding ALB headers to display user information fetched from Cognito; Storing sessions on Redis Cluster. You can access the source code to see the detailed implementation.\n"
},
{
	"uri": "/2-prerequiste/2.1-domain/",
	"title": "Register domain",
	"tags": [],
	"description": "",
	"content": "Route 53 is a scalable and highly available Domain Name System (DNS) service provided by AWS. It provides two main services: DNS and domain registration. To perform this lab, you need to prepare a domain that already has an SSL certificate. You can register a domain on Route 53 or register it from another domain provider like GoDaddy, Freenom, etc. and then transfer the DNS service to Route 53.\nBecause Route 53 is not the main content of this lab, I will briefly introduce the basic steps to transfer the DNS service from another domain provider to Route 53, without describing and explaining in detail.\nStep 1: Register a domain with a domain provider like GoDaddy, Freenom, etc.\nStep 2: Create a public hosted zone on Route 53. Name the hosted zone the same as the domain.\nStep 3: After creating the hosted zone, you will have 4 NS records. Copy these 4 NS records, then access the Nameserver management screen in the domain provider and change the default NS records to the 4 NS records of the hosted zone on Route 53.\nStep 4: Changing nameservers may take a few minutes to 24 hours. You can check if the NS record has been updated by opening a command prompt, then enter the command nslookup -q=ns {{domain}} You can refer to the following video for how to do it: https://www.youtube.com/watch?v=L8YTHHweR3M\u0026amp;t=231s\nAfter successfully updating the NS records, move on to the next step to register an SSL certificate for the domain.\n"
},
{
	"uri": "/2-prerequiste/",
	"title": "Preparation ",
	"tags": [],
	"description": "",
	"content": "In this step, we will prepare some services to deploy the application.\nTo redirect the user to the requested page after successful login, we need to set up a callback URL with https on Cognito. Therefore, in addition to the basic resources in the VPC, you will need to prepare a public domain name and request an SSL certificate for that domain.\nContent Register domain Request SSL certificate Create VPC Create Security group Create instance profile "
},
{
	"uri": "/2-prerequiste/2.2-ssl/",
	"title": "Register SSL certificate",
	"tags": [],
	"description": "",
	"content": " Access the ACM service management interface Click Request a certificate. At the Request certificate screen Click Next. At the Request public certificate screen In the Fully qualified domain name field, enter your domain. In the Add another name to this certificatefield, enter *.domain to protect both your domain and your subdomains with this certificate. Scroll down to the bottom of the page, and click Request. Click on View certificate that you just created Click Create records in Route 53. After the verification process is completed, AWS will automatically create a CNAME record for the SSL in the hosted zone. Check to see if the status changes to Issued, indicating that you have successfully requested the certificate. "
},
{
	"uri": "/3-cognito/",
	"title": "Configure Cognito",
	"tags": [],
	"description": "",
	"content": "In this step, we will proceed to configure Amazon Cognito.\nAccess the Amazon Cognito management console. Click User pools. Click Create user pools. At the Configure sign-in experience screen Cognito user pool sign-in options, select Email. Click Next. At the Configure security requirements screen Password policy mode, select Custom. Uncheck all the Password requirements option. You can use mode Cognito defaults, however, to avoid spending time creating complex passwords, this lab will use the custom policy mode.\nMFA enforcement, select No MFA. Click Next. At the Configure sign-in experience screen Don\u0026rsquo;t make any changes. Click Next. At the Configure message delivery screen Email provider, select Send email with Cognito. Click Next. At the Integrate your app screen User pool name, enter demo-cognito.\nHosted authentication pages, tick Use the Cognito Hosted UI. Domain type, select Use a Cognito domain.\nCognito domain, enter the domain prefix you want.\nApp type, select Public client.\nApp client name, enter demo-cognito. Client secret, select Generate a client secret.\nAllowed callback URLs, enter domain/oauth2/idpresponse. Replace the \u0026ldquo;domain\u0026rdquo; in the above URL with your own domain.\nExpand the Advanced app client settings section.\nScroll down to the Allowed sign-out URLs field, enter domain/index Replace the \u0026ldquo;domain\u0026rdquo; in the above URL with your own domain.\nIn OpenID Connect scopes, select OpenID. The reason is that if you select both Phone and Email then you will not be able to get other user information, such as username.\nScroll down to the bottom, click Next. At the Review and create screen\nDouble-check the information and then click Create user pool. User pool creation is complete.\nPlease save the following information so that later we will proceed to configure the .env file for the application.\nCOGNITO_CLIENT_ID\rCOGNITO_CLIENT_SECRET\rCOGNITO_DOMAIN\rCOGNITO_LOGOUT_REDIRECT_URI "
},
{
	"uri": "/2-prerequiste/2.3-vpc/",
	"title": "Create VPC ",
	"tags": [],
	"description": "",
	"content": "Create VPC, subnets, route tables, internet gateway Access the VPC management interface Click Your VPCs. Click Create VPC. At the Create VPC page. Name tag, enter Demo VPC. IPv4 CIDR, enter 10.10.0.0/16. Number of Availability Zones (AZs) select 2. Number of public subnets select 2. Number of private subnets select 0. VPC endpoints, select None. Click Create VPC at the bottom of the page. View the details of the newly created VPC. Allocate a public IP address for Public subnet 1.\nOpen Subnet menu.\nSelect PublicSubnet1.\nSelect Edit subnet settings. Check the Enable auto-assign public IPv4 address box Cick button Save\nVerify that the allocation was successful. Then do the same with Public subnet 2\n"
},
{
	"uri": "/2-prerequiste/2.4-sg/",
	"title": "Create security groups",
	"tags": [],
	"description": "",
	"content": "Create security groups In this step, we will proceed to create the security groups used for ALB, instance và ElastiCache Redis cluster.\nCreate security group for ALB Go to VPC service management console Click Security Group. Click Create security group. At the Create security group screen Security group name, enter SG ALB. Description, enter SG ALB. VPC, click X icon to select the Demo-vpc you created for this lab. Create 2 inbound rules that allow receive traffic to port 80 and 443 from the internet as below. Check Outbound rule, then click Create security group.\nCreate a security group for Linux instance in public subnet Go to VPC service management console Click Security Group. Click Create security group. At the Create security group screen Security group name, enter SG Public Linux Instance.\nDescription, enter SG Public Linux Instance.\nVPC, click X icon to select the Demo-vpc you created for this lab. The EC2 instance does not receive traffic directly from users but through the ALB, so we will configure the inbound rule to allow traffic only through the HTTP protocol, port 80 from the source Security group of the ALB.\nNext, to be able to SSH into the instance, we need to create an inbound rule for port 22 from My IP. Check Outbound rule, then click Create security group.\nCreate a security group for ElastiCache Redis cluster Go to VPC service management console Click Security Group. Click Create security group. At the Create security group screen Security group name, enter SG Redis.\nDescription, enter SG Redis.\nVPC, click X icon to select the Demo-vpc you created for this lab. To enable communication with EC2, we need to open an inbound rule for port 6379 with the source is EC2\u0026rsquo;s Security Group.\nCheck Outbound rule, then click Create security group. Adding an inbound rule for the security group of Linux instance: In order for EC2 to communicate with the Redis cluster, we need to perform the following steps:\nFrom the Security groups screen, select SG Pulic Linux Instance.\nSelect the Inbound rules tab, then click Edit inbound rules. At the Edit inbound rules screen, open an inbound rule for port 6379, with source is the Security group of the Redis cluster. So, we have completed creating all the necessary security groups for the EC2 instance, ALB, and ElastiCache Redis cluster.\n"
},
{
	"uri": "/4-deploy/",
	"title": "Deploy application",
	"tags": [],
	"description": "",
	"content": "Prepare application Please download the following zip file, extract it, and then add the following information to the .env file.\nLink download\nCOGNITO_CLIENT_ID=your client ID\rCOGNITO_CLIENT_SECRET=your client secrect COGNITO_LOGOUT_URL=cognitodomain/logout\rCOGNITO_LOGOUT_REDIRECT_URI=sign-out URLs Zip file again. Deploy application Access to Amazon Elastic Beanstalk management console. Click Create application. At the Configure environment screen In the Environment tier section, select Web server environment.\nIn the Application name field, enter demo.\nIn the Domain field, enter the domain you want and then click Check availability to see if you can use that domain. In the Platform type section, select Managed platform.\nIn the Application code section, select Upload your code.\nIn the Version label field, enter v1.\nClick Choose file and then upload the compressed file earlier. In the Configuration presets field, select High availability.\nClick Next. At the Configure service access screen In the Service role section, select aws-elasticbeanstalk-service-role. In the EC2 key pair section, select the key pair you want. In the EC2 instance profile section, select Redis_role. Click Next At the Set up networking, database, and tags screen In the VPC section, select Demo-vpc. In the Public IP address section, tick the Activated checkbox. In the Instance subnets section, select the 2 created public subnets. Scroll to the bottom of the page, click Next At the Configure instance traffic and scaling screen In the section Root volume type, select General Purpose(SSD).\nIn the Size field, enter 10. In the EC2 security groups section, select SG Public Linux Instance.\nIn the Auto scaling group section, enter min instances as 2, max as 3. Scroll down to Instance types field, select t2.micro. In the Load balancer subnets section, select the 2 created public subnets. Under Load Balancer Type, select Application load balancer.\nSelect Dedicated to create a new ALB.\nIn the Listener section, click Add listener to open the Add listener popup. At Listener port, enter 443.\nIn the Listener protocol field, enter HTTPS.\nIn the SSL certificate section, select the generated certificate.\nIn the SSL policy section, select ELBSecurityPolicy-TLS13-1-2-2021-06.\nClick Save Scroll down to the bottom, click Next.\n6/ At the Configure updates, monitoring, and logging screen\nScroll down to Container options section. In the Proxy server section, select Apache. In the Document root field, enter /cognito-redis/public. Scroll down to the bottm, click Next. 7/ At the Review screen\nScroll down to the bottm, click Submit. Chuẩn bị ứng dụng Bạn hãy tải file zip sau về, giải nén ra, rồi bổ sung các thông tin sau vào file .env.\nLink download\nCOGNITO_CLIENT_ID=your client ID\rCOGNITO_CLIENT_SECRET=your client secrect COGNITO_LOGOUT_URL=cognitodomain/logout\rCOGNITO_LOGOUT_REDIRECT_URI=sign-out URLs Zip file lại. Triển khai ứng dụng Truy cập vào giao diện quản trị của dịch vụ Amazon Elastic Beanstalk. Click Create application. Tại màn hình Configure environment Tại mục Environment tier, chọn Web server environment.\nTại mục Application name, nhập demo.\nTại mục Domain, nhập domain bạn muốn rồi ấn Check availability để xem có thể dùng domain đó không. Tại mục Platform type, chọn Managed platform.\nTại mục Application code, chọn Upload your code.\nTại mục Version label, nhập v1.\nClick Choose file rồi upload file đã nén ban nãy. Tại mục Configuration presets, chọn High availability.\nClick Next. Tại màn hình Configure service access Tại mục Service role, chọn aws-elasticbeanstalk-service-role. Tại mục EC2 key pair, chọn key pair bạn muốn. Tại mục EC2 instance profile, chọn Redis_role. Click Next Tại màn hình Set up networking, database, and tags Tại mục VPC, chọn Demo-vpc. Tại mục Public IP address, tick vào checkbox Activated. Tại mục Instance subnets, chọn 2 public subnet đã tạo. Scroll xuống cuối trang, click Next Tại màn hình Configure instance traffic and scaling Tại mục Root volume type, chọn General Purpose(SSD).\nTại mục Size, nhập 10. Tại mục EC2 security groups, chọn SG Public Linux Instance.\nTại mục Auto scaling group, nhập min instances là 2, max là 3. Scroll xuống dưới, đến mục Instance types, chọn t2.micro. Tại mục Load balancer subnets, chọn 2 public subnet đã tạo. Tại mục Load Balancer Type, chọn Application load balancer.\nChọn Dedicated để tạo mới ALB.\nTại mục Listener, click Add listener để mở popup Add listener. Tại mục Listener port, nhập 443.\nTại mục Listener protocol, nhập HTTPS.\nTại mục SSL certificate, chọn certificate đã tạo.\nTại mục SSL policy, chọn ELBSecurityPolicy-TLS13-1-2-2021-06.\nClick Save Scroll xuống cuối trang, click Next.\n6/ Tại màn hình Configure updates, monitoring, and logging\nScroll xuống đến mục Container options. Tại mục Proxy server, chọn Apache. Tại mục Document root, nhập /cognito-redis/public. Scroll xuống cuối trang, click Next. 7/ Tại màn hình Review\nScroll xuống cuối trang, click Submit. "
},
{
	"uri": "/5-configalb/",
	"title": "Configure ALB",
	"tags": [],
	"description": "",
	"content": "Configure rule for port 80 Access to EC2 service management console. Click Load balancer.\nClick on the ALB just created by EB.\nOpen tab Listener.\nTick on listener HTTP:80, then click Manage rules. At the manage rule screen for listener HTTP:80, we will proceed to set redirect all traffic from port 80 to 443 to ensure security.\nClick icon pen to edit rule.\nClick the trash icon to delete the current action, not allowing traffic to port 80 of the ALB to be forwarded directly to the target group. Click Add action to create new action, then click Redirect to\u0026hellip;. In the protocol dropdown, select HTTPS.\nIn the port field, enter 443.\nClick the tick icon.\nClick button Update. Configure rule for port 443 Next, we will configure the rule for port 443 of ALB, so that when the user accesses the dashboard page, it will ask the user to log in with Amazon Cognito, if the user accesses the index page, it will forward directly to the target group.\nFirst, go to the details screen of the newly created ALB. Open tab Listener. Tick the listener HTTP:443, then click Manage rules. Click icon plus then click Insert rule. In the condition box, select Path, enter /dashboard, and then click the tick icon. Click Add Action, then select Authenticate. In the Cognito user pool section, select the ID of the created user pool. In the App client section, select the corresponding app of the user pool. Click the tick icon. Click Add action, then click Forward to\u0026hellip;. In the target group section, select the target group that has just been created by EB. Click the tick icon. Click button Save. "
},
{
	"uri": "/2-prerequiste/2.5-ec2profile/",
	"title": "Create instance profile",
	"tags": [],
	"description": "",
	"content": " Go to IAM service management console to create instance role Click Roles. Click Create role. At the Create role screen In Trusted entity type, choose AWS service In Use case, choose EC2. Select policy AmazonElastiCacheFullAccess. Select policy AWSElasticBeanstalkWebTier. Click Next.\nIn Role name field, enter Redis_role.\nScroll to the bottom of the screen, click Create role.\n"
},
{
	"uri": "/6-dns/",
	"title": "Configure DNS record",
	"tags": [],
	"description": "",
	"content": "In this step, we will configure route 53 so that when accessing the domain democognito.mymy.asia, the DNS server will point to EB\u0026rsquo;s domain.\nAccess to Route53 service management console.\nClick on Hosted zones.\nClick on the name of the Hostes zone you created Click Create record In the Record name field, input democognito. If you want to point the root domain directly to the EB environment, you can leave this field blank\nON toggle Alias.\nSelect route traffic to Alias to EB enviroment in region us-east-1, then select created EB enviroment.\nClick Create records After creating the record successfully, try to access it by pasting the record name of the newly created record into the browser. You should now see the browser display the application\u0026rsquo;s index screen. "
},
{
	"uri": "/7-beforeapplyredis/",
	"title": "Before applying Redis",
	"tags": [],
	"description": "",
	"content": " Type the address https://subdomain/demo-cognito/ into the browser\n(Substitute your respective subdomain for “subdomain” in the URL)\nClick Go to my page You will now be navigated to Cognito\u0026rsquo;s Sign in screen. If you do not have an account, please click on the text link Sign up, register, then login. Once logged in, you will be redirected to the correct dashboard screen. Pay attention to the EC2 ID information and the number of times visit page.\nDo F5 continuously, you will see that if you are in EC2-1, next time F5, if you are still navigated into EC2-1, the number of visit page will increase by 1 unit. However, if the next F5 you are redirected to EC2-2, the visit page will be recounted from 1. The reason is because by default, our application will store session and the cache in file driver, which means it will be saved directly on the server. Therefore, the sessions on the 2 EC2s are completely unrelated, so when we are redirected to EC2-2, the system will start a new session, not update the existing session.\nTo solve this problem, we will use AWS\u0026rsquo;s Amazon ElastiCache Redis to store the session of the servers in the same redis cluster.\n"
},
{
	"uri": "/8-rediscluster/8.2-applyredis/",
	"title": "Apply redis cho application",
	"tags": [],
	"description": "",
	"content": "Configure the .env file and install the predis package Open source code extracted earlier with IDE such as Visual Studio Code, PHP Storm, \u0026hellip; Edit the env related to session, redis as follows: CACHE_DRIVER=redis\rSESSION_DRIVER=redis\rREDIS_HOST=primary endpoint of redis cluster\rREDIS_CLIENT=predis Then, open terminal, run command composer require predis/predis to install predis package. Predis is a PHP library used to work with Redis, a fast and powerful key-value cache in-memory database system. Predis provides an easy-to-use interface for connecting and interacting with Redis from your PHP application.\nCompress the cognito-redis folder again. Deploy new version Access the detail screen of the created EB enviroment. Click Upload and deploy. In the Upload and deploy popup, upload the zipped cognito-redis folder. In the Version label field, enter v1.1. Click Deploy. "
},
{
	"uri": "/8-rediscluster/",
	"title": "Configure Redis cluster",
	"tags": [],
	"description": "",
	"content": "In this step, we will configure the Redis cluster on Amazon ElastiCache.\nContent: Create Redis clusters Apply Redis "
},
{
	"uri": "/9-test/",
	"title": "Test",
	"tags": [],
	"description": "",
	"content": " Type the address https://subdomain/demo-cognito/ into the browser\n(Substitute your respective subdomain for “subdomain” in the URL)\nClick on Go to my page and then login. Proceed to F5 continuously. https://drive.google.com/file/d/13F1_owuio3eYqvFjUXHnmzpdzqd4m02a/view?usp=sharing\nYou can see that, even though we alternately navigate between 2 EC2, but every time F5, visit time is incremented by 1, indicating that we have deployed redis successfully.\nCongratulations, you have just completed the exercise. Remember to perform resource cleanup to avoid unintended costs.\n"
},
{
	"uri": "/10-cleanup/",
	"title": "Clean up resources ",
	"tags": [],
	"description": "",
	"content": "We will take the following steps to delete the resources we created in this exercise.\nDelete EB enviroment: Access Elastic Beanstalk Management Console Open menu Enviroment, tick the enviroment created in the lab, click the Action button and then select Terminate enviroment. Delete Security group Access EC2 Click Security Group Select security groups related to the lab. Click Actions Click Delete security group Delete Keypair Access EC2 Click Key Pairs Click Actions Click Delete Delete User pool Access Cognito Select User pool Click Delete Delete VPC Access VPC Select Your VPCs Select the VPCs related to the lab Click Actions Click Delete VPC Delete Certificates Access ACM Click List certificates Select the VPCs related to the lab Click Delete Delete Hosted zone Access Route 53 Select Hosted zone Select the Hosted zone related to the lab Click Delete "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]